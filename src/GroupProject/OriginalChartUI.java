package GroupProject;

import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Yazhou
 */
public class OriginalChartUI extends javax.swing.JFrame {

    /**
     * Creates new form OriginalChart
     */
    public OriginalChartUI() {
        initComponents();
    }
    File file = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        charTypeGroup = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        dataResourcePanel = new javax.swing.JPanel();
        dataResourceLabel = new javax.swing.JLabel();
        localPanel = new javax.swing.JPanel();
        localLabel = new javax.swing.JLabel();
        localDataResourceAddr = new javax.swing.JTextField();
        localUploadButton = new javax.swing.JButton();
        localCancelButton = new javax.swing.JButton();
        localBrowseButton = new javax.swing.JButton();
        AWSPanel = new javax.swing.JPanel();
        AWSLabel = new javax.swing.JLabel();
        AWSOkButton = new javax.swing.JButton();
        AWSCancelButton = new javax.swing.JButton();
        AWSBrowseButton = new javax.swing.JButton();
        AWSDataSource = new javax.swing.JComboBox();
        rawDataPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        rawDataTable = new javax.swing.JTable();
        measuresPanel = new javax.swing.JPanel();
        measuresLabel = new javax.swing.JLabel();
        measuresXLabel = new javax.swing.JLabel();
        measuresYLabel = new javax.swing.JLabel();
        XItem = new javax.swing.JComboBox();
        YItem = new javax.swing.JComboBox();
        chartTypePanel = new javax.swing.JPanel();
        chartTypeLabel = new javax.swing.JLabel();
        chartTypeListPanel1 = new javax.swing.JPanel();
        chartTypeImg1 = new javax.swing.JPanel();
        BarChart = new javax.swing.JRadioButton();
        chartTypeListPanel2 = new javax.swing.JPanel();
        chartTypeImg2 = new javax.swing.JPanel();
        LineChart = new javax.swing.JRadioButton();
        Confirm = new javax.swing.JButton();
        chartDisplayPanel = new javax.swing.JPanel();
        generatePanel = new javax.swing.JPanel();
        generateButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dataResourcePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dataResourceLabel.setText("Data Resource");

        localLabel.setText("Local");

        localDataResourceAddr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localDataResourceAddrActionPerformed(evt);
            }
        });

        localUploadButton.setText("Upload");
        localUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localUploadButtonActionPerformed(evt);
            }
        });

        localCancelButton.setText("Cancel");
        localCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localCancelButtonActionPerformed(evt);
            }
        });

        localBrowseButton.setText("Browse");
        localBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localBrowseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout localPanelLayout = new javax.swing.GroupLayout(localPanel);
        localPanel.setLayout(localPanelLayout);
        localPanelLayout.setHorizontalGroup(
            localPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localPanelLayout.createSequentialGroup()
                .addComponent(localLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(localPanelLayout.createSequentialGroup()
                .addComponent(localDataResourceAddr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(localBrowseButton)
                .addContainerGap())
            .addGroup(localPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(localUploadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(localCancelButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        localPanelLayout.setVerticalGroup(
            localPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localPanelLayout.createSequentialGroup()
                .addComponent(localLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(localPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localDataResourceAddr)
                    .addComponent(localBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(localPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localUploadButton)
                    .addComponent(localCancelButton))
                .addContainerGap())
        );

        AWSLabel.setText("AWS");

        AWSOkButton.setText("OK");
        AWSOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AWSOkButtonActionPerformed(evt);
            }
        });

        AWSCancelButton.setText("Cancel");
        AWSCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AWSCancelButtonActionPerformed(evt);
            }
        });

        AWSBrowseButton.setText("Browse");
        AWSBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AWSBrowseButtonActionPerformed(evt);
            }
        });

        AWSDataSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AWSDataSourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AWSPanelLayout = new javax.swing.GroupLayout(AWSPanel);
        AWSPanel.setLayout(AWSPanelLayout);
        AWSPanelLayout.setHorizontalGroup(
            AWSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AWSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AWSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AWSPanelLayout.createSequentialGroup()
                        .addComponent(AWSDataSource, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AWSBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AWSPanelLayout.createSequentialGroup()
                        .addGroup(AWSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AWSLabel)
                            .addGroup(AWSPanelLayout.createSequentialGroup()
                                .addComponent(AWSOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AWSCancelButton)))
                        .addContainerGap(96, Short.MAX_VALUE))))
        );
        AWSPanelLayout.setVerticalGroup(
            AWSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AWSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AWSLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AWSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AWSBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AWSDataSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AWSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AWSCancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AWSOkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout dataResourcePanelLayout = new javax.swing.GroupLayout(dataResourcePanel);
        dataResourcePanel.setLayout(dataResourcePanelLayout);
        dataResourcePanelLayout.setHorizontalGroup(
            dataResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(localPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dataResourcePanelLayout.createSequentialGroup()
                .addComponent(dataResourceLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(dataResourcePanelLayout.createSequentialGroup()
                .addComponent(AWSPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        dataResourcePanelLayout.setVerticalGroup(
            dataResourcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataResourcePanelLayout.createSequentialGroup()
                .addComponent(dataResourceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(localPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AWSPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        rawDataPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rawDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(rawDataTable);

        javax.swing.GroupLayout rawDataPanelLayout = new javax.swing.GroupLayout(rawDataPanel);
        rawDataPanel.setLayout(rawDataPanelLayout);
        rawDataPanelLayout.setHorizontalGroup(
            rawDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );
        rawDataPanelLayout.setVerticalGroup(
            rawDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rawDataPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        measuresPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        measuresLabel.setText("Measures");

        measuresXLabel.setText("X:");

        measuresYLabel.setText("Y:");

        XItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout measuresPanelLayout = new javax.swing.GroupLayout(measuresPanel);
        measuresPanel.setLayout(measuresPanelLayout);
        measuresPanelLayout.setHorizontalGroup(
            measuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(measuresPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(measuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(measuresLabel)
                    .addGroup(measuresPanelLayout.createSequentialGroup()
                        .addComponent(measuresXLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(XItem, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(measuresPanelLayout.createSequentialGroup()
                        .addComponent(measuresYLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(YItem, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        measuresPanelLayout.setVerticalGroup(
            measuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(measuresPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(measuresLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(measuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(measuresXLabel)
                    .addComponent(XItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(measuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(measuresYLabel)
                    .addComponent(YItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        chartTypePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        chartTypeLabel.setText("Chart Type");

        charTypeGroup.add(BarChart);
        BarChart.setText("Bar Chart");
        BarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chartTypeImg1Layout = new javax.swing.GroupLayout(chartTypeImg1);
        chartTypeImg1.setLayout(chartTypeImg1Layout);
        chartTypeImg1Layout.setHorizontalGroup(
            chartTypeImg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarChart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        chartTypeImg1Layout.setVerticalGroup(
            chartTypeImg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chartTypeImg1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout chartTypeListPanel1Layout = new javax.swing.GroupLayout(chartTypeListPanel1);
        chartTypeListPanel1.setLayout(chartTypeListPanel1Layout);
        chartTypeListPanel1Layout.setHorizontalGroup(
            chartTypeListPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypeListPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTypeImg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        chartTypeListPanel1Layout.setVerticalGroup(
            chartTypeListPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypeListPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTypeImg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        charTypeGroup.add(LineChart);
        LineChart.setText("Line Chart");

        javax.swing.GroupLayout chartTypeImg2Layout = new javax.swing.GroupLayout(chartTypeImg2);
        chartTypeImg2.setLayout(chartTypeImg2Layout);
        chartTypeImg2Layout.setHorizontalGroup(
            chartTypeImg2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypeImg2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LineChart, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addContainerGap())
        );
        chartTypeImg2Layout.setVerticalGroup(
            chartTypeImg2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chartTypeImg2Layout.createSequentialGroup()
                .addGap(0, 65, Short.MAX_VALUE)
                .addComponent(LineChart, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout chartTypeListPanel2Layout = new javax.swing.GroupLayout(chartTypeListPanel2);
        chartTypeListPanel2.setLayout(chartTypeListPanel2Layout);
        chartTypeListPanel2Layout.setHorizontalGroup(
            chartTypeListPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypeListPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTypeImg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        chartTypeListPanel2Layout.setVerticalGroup(
            chartTypeListPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypeListPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTypeImg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        Confirm.setText("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chartTypePanelLayout = new javax.swing.GroupLayout(chartTypePanel);
        chartTypePanel.setLayout(chartTypePanelLayout);
        chartTypePanelLayout.setHorizontalGroup(
            chartTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chartTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chartTypePanelLayout.createSequentialGroup()
                        .addComponent(chartTypeLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(chartTypePanelLayout.createSequentialGroup()
                        .addComponent(chartTypeListPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chartTypeListPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(chartTypePanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(Confirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        chartTypePanelLayout.setVerticalGroup(
            chartTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chartTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chartTypeListPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chartTypeListPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(Confirm))
        );

        chartDisplayPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        chartDisplayPanel.setLayout(new java.awt.BorderLayout());

        generatePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout generatePanelLayout = new javax.swing.GroupLayout(generatePanel);
        generatePanel.setLayout(generatePanelLayout);
        generatePanelLayout.setHorizontalGroup(
            generatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        generatePanelLayout.setVerticalGroup(
            generatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(generatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(measuresPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chartTypePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataResourcePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chartDisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rawDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dataResourcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chartTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chartDisplayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(measuresPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(generatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rawDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        String columnTitle = (String) XItem.getSelectedItem();
        String rowTitle = (String) YItem.getSelectedItem();
        File file = new File("studentTemp.csv");

        draw3DBarChart();

    }//GEN-LAST:event_generateButtonActionPerformed

    private void localDataResourceAddrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localDataResourceAddrActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_localDataResourceAddrActionPerformed

    private void localUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localUploadButtonActionPerformed
        try {
            // TODO add your handling code here:
            FileUpload.Upload(file);
        } catch (IOException ex) {
            Logger.getLogger(OriginalChartUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_localUploadButtonActionPerformed

    private void localBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localBrowseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileTypeFilter fileFileter = new FileTypeFilter();
        fileChooser.setFileFilter(fileFileter);
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
            //  FileName.setText(file.getName());
            //FileUpload.Upload(file);
            localDataResourceAddr.setText(file.getName());
        } else {
            JOptionPane.showMessageDialog(null, "File access cancelled by user.", "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_localBrowseButtonActionPerformed

    private void localCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localCancelButtonActionPerformed
        // TODO add your handling code here:
        localDataResourceAddr.setText("");
    }//GEN-LAST:event_localCancelButtonActionPerformed

    private void AWSOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AWSOkButtonActionPerformed
        // TODO add your handling code here:
        String selectedFile = (String) AWSDataSource.getSelectedItem();
        try {
            FileDownload.DownloadFile(selectedFile);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }//GEN-LAST:event_AWSOkButtonActionPerformed

    private void AWSCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AWSCancelButtonActionPerformed
        // TODO add your handling code here:
        AWSDataSource.removeAllItems();
    }//GEN-LAST:event_AWSCancelButtonActionPerformed

    private void AWSBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AWSBrowseButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> fileList = FileDownload.FileList();

        for (int i = 0; i < fileList.size(); i++) {
            AWSDataSource.addItem(fileList.get(i));
        }

    }//GEN-LAST:event_AWSBrowseButtonActionPerformed

    private void AWSDataSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AWSDataSourceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AWSDataSourceActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        Peer peer = new Peer();
        XItem.removeAllItems();
        if (BarChart.isSelected()) {
            String[] xTitle = peer.getAttributeTitle();
            String[][] xyMeasure = peer.getXyMeasure();
            for (int i = 0; i < xTitle.length; i++) {
                XItem.addItem(xTitle[i]);

                String selectedItem = (String) XItem.getSelectedItem();

            }
        }
        if (LineChart.isSelected()) {
            String[] xTitle = {"year_of_arrival_in_usa", "course_completion_year"};
            for (int i = 0; i < xTitle.length; i++) {
                XItem.addItem(xTitle[i]);
                String selectedItem = (String) XItem.getSelectedItem();

            }
        }

    }//GEN-LAST:event_ConfirmActionPerformed

    private void BarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarChartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BarChartActionPerformed

    private void XItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XItemActionPerformed
        // TODO add your handling code here:
        YItem.removeAllItems();
        if (BarChart.isSelected()) {
            int index = XItem.getSelectedIndex();
            
            Peer peer = new Peer();
            String[] yList = peer.getXyMeasure()[index];
            for (int i = 1; i < yList.length; i++) {
                YItem.addItem(yList[i]);
            }
        }
        if(LineChart.isSelected()){
            YItem.addItem("entrance_score");
            YItem.addItem("course_gpa");
        }


    }//GEN-LAST:event_XItemActionPerformed
    public void setLableName() {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OriginalChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OriginalChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OriginalChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OriginalChartUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OriginalChartUI().setVisible(true);
                
            }
        });
    }
    
        public void draw3DBarChart() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(1, "", "Statistic_1");
        dataset.setValue(2, "", "Statistic_2");
        dataset.setValue(3, "", "Statistic_3");
        dataset.setValue(4, "", "Statistic_4");
        JFreeChart chart = ChartFactory.createBarChart3D("Statistics", "", "", dataset, PlotOrientation.VERTICAL, false, false, false);

        CategoryPlot plot = chart.getCategoryPlot();
        plot.setBackgroundPaint(new java.awt.Color(255, 255, 255));
        ChartPanel chartPanel = new ChartPanel(chart);
        chartDisplayPanel.removeAll();
        chartDisplayPanel.add(chartPanel, BorderLayout.CENTER);
        chartDisplayPanel.validate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AWSBrowseButton;
    private javax.swing.JButton AWSCancelButton;
    private javax.swing.JComboBox AWSDataSource;
    private javax.swing.JLabel AWSLabel;
    private javax.swing.JButton AWSOkButton;
    private javax.swing.JPanel AWSPanel;
    private javax.swing.JRadioButton BarChart;
    private javax.swing.JButton Confirm;
    private javax.swing.JRadioButton LineChart;
    private javax.swing.JComboBox XItem;
    private javax.swing.JComboBox YItem;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup charTypeGroup;
    private javax.swing.JPanel chartDisplayPanel;
    private javax.swing.JPanel chartTypeImg1;
    private javax.swing.JPanel chartTypeImg2;
    private javax.swing.JLabel chartTypeLabel;
    private javax.swing.JPanel chartTypeListPanel1;
    private javax.swing.JPanel chartTypeListPanel2;
    private javax.swing.JPanel chartTypePanel;
    private javax.swing.JLabel dataResourceLabel;
    private javax.swing.JPanel dataResourcePanel;
    private javax.swing.JButton generateButton;
    private javax.swing.JPanel generatePanel;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton localBrowseButton;
    private javax.swing.JButton localCancelButton;
    private javax.swing.JTextField localDataResourceAddr;
    private javax.swing.JLabel localLabel;
    private javax.swing.JPanel localPanel;
    private javax.swing.JButton localUploadButton;
    private javax.swing.JLabel measuresLabel;
    private javax.swing.JPanel measuresPanel;
    private javax.swing.JLabel measuresXLabel;
    private javax.swing.JLabel measuresYLabel;
    private javax.swing.JPanel rawDataPanel;
    private javax.swing.JTable rawDataTable;
    // End of variables declaration//GEN-END:variables
}
